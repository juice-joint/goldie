# build tauri bundles
name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    strategy:
      fail-fast: true
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "aarch64-apple-darwin,x86_64-apple-darwin"

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "tauri -> target"
          cache-on-failure: true
          shared-key: "${{ matrix.platform }}"

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo add-apt-repository ppa:oibaf/graphics-drivers -y
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libjavascriptcoregtk-4.1-dev \
            libsoup-3.0-dev

      - name: Install bun
        uses: oven-sh/setup-bun@v1

      - name: Install deps
        run: bun install

      - name: Build
        if: matrix.platform == 'macos-latest'
        run: |
          rustup target add x86_64-apple-darwin
          mkdir -p tauri/target/release/bundle
          bun run tauri build --target universal-apple-darwin
          # copy universal build to release dir
          mkdir -p tauri/target/release/bundle/dmg
          cp tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg tauri/target/release/bundle/dmg/

      - name: Build
        if: matrix.platform != 'macos-latest'
        run: bun run tauri build

      - name: Debug Build Output
        run: |
          echo "Current directory: $PWD"
          echo "Listing tauri/target/release:"
          ls -R tauri/target/release/
          echo "Listing bundle directory (if exists):"
          ls -R tauri/target/release/bundle/ || echo "Bundle directory not found"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}
          path: |
            tauri/target/release/bundle/deb/*.deb
            tauri/target/release/bundle/appimage/*.AppImage
            tauri/target/release/bundle/dmg/*.dmg
            tauri/target/release/bundle/nsis/*.exe
